{"google":"UA-33800934-3","body":"Google Url Shortener in Dart\r\n====\r\n\r\nA small library and application that shortens and expands urls using dart and google shortener apis.\r\n\r\nUsage\r\n----\r\n\r\n### Library\r\n\r\nInstalling from [pub.dartlang.org](http://pub.dartlang.org) apply the following to pubspec.yaml \r\n\r\n```\r\ndependencies:\r\n  goog_url_shortener: any\r\n```\r\n\r\nInstalling from [this](https://github.com/financeCoding/goog_url_shortener) git repo apply the following to pubspec.yaml\r\n\r\n```\r\ndependencies:\r\n  goog_url_shortener: \r\n  \tgit: git://github.com/financeCoding/goog_url_shortener.git\r\n```\r\n\r\nImporting the library\r\n\r\n```\r\nimport 'package:goog_url_shortener/goog_url_shortener_console.dart';\r\n```\r\n\r\nExample of calling the shortener\r\n\r\n```\r\n  initializeSSL();\r\n  UrlShortener urlShortener = new UrlShortener(url: url,\r\n                                               command: type,\r\n                                               key: key);\r\n  var furture = urlShortener.execute(); \r\n  furture.then((Map data) {\r\n    print('Long Url = ${data[\"longUrl\"]}');\r\n    print('Short Url = ${data[\"id\"]}')\r\n  });                                         \r\n```\r\n\r\nUsing this code as library a pkcert database needs to be set for the `SecureSocket` to function properly. The following function could be implemented that passes the directory location of the pkcert's\r\n\r\n```\r\n/**\r\n * Setup the certificate database for the client. \r\n */\r\nvoid initializeSSL() {\r\n  var testPkcertDatabase =\r\n      new Path.fromNative(new Options().script).directoryPath.append('pkcert/');\r\n  SecureSocket.setCertificateDatabase(testPkcertDatabase.toNativePath());\r\n}\r\n```\r\n\r\n### Tool\r\n\r\nThe `goog_url_shortener.dart` in `bin/` could be used as a standalone commandline tool for shortening or expanding urls. \r\n\r\n###### Shorten a url\r\n\r\n```\r\n$ ./bin/goog_url_shortener.dart -u http://www.dartlang.org -t shorten\r\nLong Url = http://www.dartlang.org/\r\nShort Url = http://goo.gl/8l3PM\r\n```\r\n\r\n###### Expand url\r\n\r\n```\r\n$ ./bin/goog_url_shortener.dart -u http://goo.gl/8l3PM -t expand\r\nLong Url = http://www.dartlang.org/\r\nShort Url = http://goo.gl/8l3PM\r\n```\r\n\r\n###### Help\r\n\r\n```\r\n$ ./bin/goog_url_shortener.dart -h\r\n-c, --curl               absolute path for curl\r\n                         (defaults to \"curl\")\r\n\r\n-k, --key                google api key\r\n-u, --url                url\r\n                         (defaults to \"http://www.google.com\")\r\n\r\n-t, --type               type of action to execute\r\n\r\n          [analytics]    analytics for the url\r\n          [expand]       expand the url\r\n          [shorten]      shorten the url\r\n\r\n-h, --help               help\r\n\r\n```\r\n\r\nTODO\r\n----\r\nAdd an example of creating a cert database.","note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Goog Url Shortener","tagline":"Small url shortener library and application using dart and google shortener api"}